class SwipeGestureManager{constructor(){this.activeGestures=new Map,this.init()}init(){this.setupChartSwipes(),this.setupTableSwipes(),this.setupWatchlistSwipes()}setupChartSwipes(){document.querySelectorAll(".chart-container, .stock-chart").forEach(t=>{this.addChartSwipeSupport(t)})}addChartSwipeSupport(t){const e=new ChartSwipeGesture(t);this.activeGestures.set(t,e)}setupTableSwipes(){document.querySelectorAll(".holdings-table, .leaderboard-table").forEach(t=>{this.addTableSwipeSupport(t)})}addTableSwipeSupport(t){const e=new TableSwipeGesture(t);this.activeGestures.set(t,e)}setupWatchlistSwipes(){document.querySelectorAll(".watchlist-item").forEach(t=>{this.addWatchlistSwipeSupport(t)})}addWatchlistSwipeSupport(t){const e=new WatchlistSwipeGesture(t);this.activeGestures.set(t,e)}}class ChartSwipeGesture{constructor(t){this.container=t,this.startX=0,this.startY=0,this.currentX=0,this.currentY=0,this.isDragging=!1,this.timeframes=["1D","1W","1M","3M","1Y","5Y"],this.currentTimeframeIndex=0,this.init()}init(){this.createTimeframeIndicator(),this.bindEvents(),this.addChartZoomSupport()}createTimeframeIndicator(){if(this.container.querySelector(".timeframe-indicator"))return;const t=document.createElement("div");t.className="timeframe-indicator",t.innerHTML=`\n            <div class="timeframe-pills">\n                ${this.timeframes.map((t,e)=>`<span class="timeframe-pill ${0===e?"active":""}" data-timeframe="${t}">${t}</span>`).join("")}\n            </div>\n        `,this.container.appendChild(t);const e=document.createElement("style");e.textContent="\n            .timeframe-indicator {\n                position: absolute;\n                top: 10px;\n                right: 10px;\n                z-index: 10;\n            }\n            \n            .timeframe-pills {\n                display: flex;\n                gap: 4px;\n                background: rgba(0, 0, 0, 0.7);\n                border-radius: 20px;\n                padding: 4px;\n            }\n            \n            .timeframe-pill {\n                padding: 4px 8px;\n                border-radius: 16px;\n                color: white;\n                font-size: 12px;\n                cursor: pointer;\n                transition: background-color 0.2s;\n            }\n            \n            .timeframe-pill.active {\n                background: var(--color-primary, #007bff);\n            }\n        ",document.head.appendChild(e)}bindEvents(){this.container.addEventListener("touchstart",t=>this.handleTouchStart(t),{passive:!0}),this.container.addEventListener("touchmove",t=>this.handleTouchMove(t),{passive:!1}),this.container.addEventListener("touchend",t=>this.handleTouchEnd(t),{passive:!0}),this.container.addEventListener("click",t=>{t.target.classList.contains("timeframe-pill")&&this.changeTimeframe(t.target.dataset.timeframe)})}handleTouchStart(t){this.startX=t.touches[0].clientX,this.startY=t.touches[0].clientY,this.isDragging=!1}handleTouchMove(t){if(!t.touches[0])return;this.currentX=t.touches[0].clientX,this.currentY=t.touches[0].clientY;const e=this.currentX-this.startX,i=this.currentY-this.startY;Math.abs(e)>Math.abs(i)&&Math.abs(e)>30&&(this.isDragging=!0,t.preventDefault())}handleTouchEnd(t){if(!this.isDragging)return;const e=this.currentX-this.startX;Math.abs(e)>50&&(e>0?this.previousTimeframe():this.nextTimeframe()),this.isDragging=!1}nextTimeframe(){this.currentTimeframeIndex<this.timeframes.length-1&&(this.currentTimeframeIndex++,this.updateTimeframe())}previousTimeframe(){this.currentTimeframeIndex>0&&(this.currentTimeframeIndex--,this.updateTimeframe())}changeTimeframe(t){const e=this.timeframes.indexOf(t);-1!==e&&(this.currentTimeframeIndex=e,this.updateTimeframe())}updateTimeframe(){this.container.querySelectorAll(".timeframe-pill").forEach((t,e)=>{t.classList.toggle("active",e===this.currentTimeframeIndex)}),this.showSwipeHint(),this.container.dispatchEvent(new CustomEvent("timeframechange",{detail:{timeframe:this.timeframes[this.currentTimeframeIndex],index:this.currentTimeframeIndex}}))}showSwipeHint(){const t=this.container.querySelector(".swipe-hint");t&&(t.textContent=`Swipe to change timeframe (${this.timeframes[this.currentTimeframeIndex]})`,t.classList.add("visible"),setTimeout(()=>{t.classList.remove("visible")},2e3))}addChartZoomSupport(){let t=0,e=1,i={x:0,y:0},n={x:0,y:0};this.container.addEventListener("touchstart",e=>{2===e.touches.length&&(t=this.getDistance(e.touches[0],e.touches[1]),i=this.getCenter(e.touches[0],e.touches[1]))},{passive:!0}),this.container.addEventListener("touchmove",s=>{if(2===s.touches.length){s.preventDefault();const a=this.getDistance(s.touches[0],s.touches[1]),o=this.getCenter(s.touches[0],s.touches[1]),r=a/t;e=Math.min(Math.max(r,.5),3);const c=o.x-i.x,h=o.y-i.y;n.x+=c,n.y+=h;const l=this.container.querySelector("canvas");l&&(l.style.transform=`scale(${e}) translate(${n.x}px, ${n.y}px)`),this.showZoomIndicator(e)}},{passive:!1}),this.container.addEventListener("touchend",t=>{if(0===t.touches.length){this.container.querySelector("canvas")&&1!==e&&this.container.dispatchEvent(new CustomEvent("chartzoom",{detail:{scale:e,translate:n}})),this.hideZoomIndicator()}},{passive:!0}),this.addZoomControls()}addZoomControls(){if(this.container.querySelector(".zoom-controls"))return;const t=document.createElement("div");t.className="zoom-controls",t.innerHTML='\n            <button class="zoom-btn zoom-in" data-action="zoom-in">\n                <i class="fas fa-plus"></i>\n            </button>\n            <button class="zoom-btn zoom-out" data-action="zoom-out">\n                <i class="fas fa-minus"></i>\n            </button>\n            <button class="zoom-btn zoom-reset" data-action="zoom-reset">\n                <i class="fas fa-expand-arrows-alt"></i>\n            </button>\n        ',this.container.appendChild(t);const e=document.createElement("style");e.textContent="\n            .zoom-controls {\n                position: absolute;\n                bottom: 60px;\n                right: 10px;\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n                z-index: 10;\n            }\n            \n            .zoom-btn {\n                width: 44px;\n                height: 44px;\n                border: none;\n                background: rgba(0, 0, 0, 0.7);\n                color: white;\n                border-radius: 50%;\n                font-size: 16px;\n                cursor: pointer;\n                transition: all 0.2s ease;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            \n            .zoom-btn:hover {\n                background: rgba(0, 0, 0, 0.8);\n                transform: scale(1.1);\n            }\n            \n            .zoom-indicator {\n                position: absolute;\n                top: 10px;\n                left: 50%;\n                transform: translateX(-50%);\n                background: rgba(0, 0, 0, 0.7);\n                color: white;\n                padding: 8px 12px;\n                border-radius: 20px;\n                font-size: 14px;\n                z-index: 10;\n                opacity: 0;\n                transition: opacity 0.2s ease;\n            }\n            \n            .zoom-indicator.visible {\n                opacity: 1;\n            }\n        ",document.head.appendChild(e),t.addEventListener("click",t=>{const e=t.target.closest(".zoom-btn");if(e){const t=e.dataset.action;this.handleZoomAction(t)}})}handleZoomAction(t){const e=this.container.querySelector("canvas");if(!e)return;let i=1;const n=e.style.transform.match(/scale\(([^)]+)\)/),s=n?parseFloat(n[1]):1;switch(t){case"zoom-in":i=Math.min(1.2*s,3);break;case"zoom-out":i=Math.max(s/1.2,.5);break;case"zoom-reset":i=1}e.style.transform=`scale(${i})`,this.showZoomIndicator(i),setTimeout(()=>{this.hideZoomIndicator()},1500),this.container.dispatchEvent(new CustomEvent("chartzoom",{detail:{scale:i}}))}showZoomIndicator(t){let e=this.container.querySelector(".zoom-indicator");e||(e=document.createElement("div"),e.className="zoom-indicator",this.container.appendChild(e)),e.textContent=`${Math.round(100*t)}%`,e.classList.add("visible")}hideZoomIndicator(){const t=this.container.querySelector(".zoom-indicator");t&&t.classList.remove("visible")}getCenter(t,e){return{x:(t.clientX+e.clientX)/2,y:(t.clientY+e.clientY)/2}}getDistance(t,e){const i=t.clientX-e.clientX,n=t.clientY-e.clientY;return Math.sqrt(i*i+n*n)}}class TableSwipeGesture{constructor(t){this.table=t,this.startX=0,this.currentX=0,this.isDragging=!1,this.init()}init(){this.bindEvents(),this.addTableRowActions()}bindEvents(){this.table.addEventListener("touchstart",t=>this.handleTouchStart(t),{passive:!0}),this.table.addEventListener("touchmove",t=>this.handleTouchMove(t),{passive:!1}),this.table.addEventListener("touchend",t=>this.handleTouchEnd(t),{passive:!0})}handleTouchStart(t){this.startX=t.touches[0].clientX,this.isDragging=!1}handleTouchMove(t){if(!t.touches[0])return;this.currentX=t.touches[0].clientX;const e=this.currentX-this.startX;Math.abs(e)>10&&(this.isDragging=!0)}handleTouchEnd(t){this.isDragging&&this.addMomentumScrolling(),this.isDragging=!1}addMomentumScrolling(){this.table.style.webkitOverflowScrolling="touch",this.table.style.scrollBehavior="smooth",this.addScrollIndicators()}addScrollIndicators(){if(this.table.querySelector(".scroll-indicator"))return;const t=document.createElement("div");t.className="scroll-indicator-container";const e=document.createElement("div");e.className="scroll-indicator";const i=document.createElement("div");i.className="scroll-fade scroll-fade-left";const n=document.createElement("div");n.className="scroll-fade scroll-fade-right",t.appendChild(e),this.table.parentNode.appendChild(t),this.table.parentNode.appendChild(i),this.table.parentNode.appendChild(n);const s=document.createElement("style");s.textContent="\n            .scroll-indicator-container {\n                position: relative;\n                height: 3px;\n                background: rgba(0, 0, 0, 0.1);\n                border-radius: 2px;\n                margin-top: 4px;\n            }\n            \n            .scroll-indicator {\n                height: 100%;\n                background: var(--color-primary);\n                border-radius: 2px;\n                transition: width 0.2s ease;\n                width: 0%;\n            }\n            \n            .scroll-fade {\n                position: absolute;\n                top: 0;\n                bottom: 0;\n                width: 20px;\n                pointer-events: none;\n                z-index: 1;\n                opacity: 0;\n                transition: opacity 0.2s ease;\n            }\n            \n            .scroll-fade-left {\n                left: 0;\n                background: linear-gradient(to right, var(--bg-card), transparent);\n            }\n            \n            .scroll-fade-right {\n                right: 0;\n                background: linear-gradient(to left, var(--bg-card), transparent);\n            }\n            \n            .scroll-fade.visible {\n                opacity: 1;\n            }\n        ",document.head.appendChild(s),this.table.addEventListener("scroll",()=>{const t=this.table.scrollLeft/(this.table.scrollWidth-this.table.clientWidth)*100;e.style.width=`${Math.min(t,100)}%`,i.classList.toggle("visible",this.table.scrollLeft>10),n.classList.toggle("visible",this.table.scrollLeft<this.table.scrollWidth-this.table.clientWidth-10)},{passive:!0});const a=this.table.scrollLeft/(this.table.scrollWidth-this.table.clientWidth)*100;e.style.width=`${Math.min(a,100)}%`,n.classList.toggle("visible",this.table.scrollWidth>this.table.clientWidth)}addTableRowActions(){if(window.innerWidth>768)return;this.table.querySelectorAll("tbody tr").forEach(t=>{this.addRowSwipeSupport(t)})}addRowSwipeSupport(t){let e=0,i=0,n=!1;t.addEventListener("touchstart",t=>{e=t.touches[0].clientX,n=!1},{passive:!0}),t.addEventListener("touchmove",s=>{if(!s.touches[0])return;i=s.touches[0].clientX;const a=i-e;Math.abs(a)>10&&(n=!0,s.preventDefault(),a<0&&(t.style.transform=`translateX(${Math.max(a,-80)}px)`,this.showRowActions(t)))},{passive:!1}),t.addEventListener("touchend",()=>{if(n){i-e<-40?t.style.transform="translateX(-80px)":(t.style.transform="",this.hideRowActions(t))}n=!1},{passive:!0})}showRowActions(t){if(t.querySelector(".row-actions"))return;const e=document.createElement("div");e.className="row-actions",e.innerHTML='\n            <button class="action-btn view-btn" data-action="view">\n                <i class="fas fa-eye"></i>\n            </button>\n            <button class="action-btn edit-btn" data-action="edit">\n                <i class="fas fa-edit"></i>\n            </button>\n        ',t.appendChild(e),e.addEventListener("click",e=>{const i=e.target.closest(".action-btn");if(i){const e=i.dataset.action;this.handleRowAction(t,e)}})}hideRowActions(t){const e=t.querySelector(".row-actions");e&&e.remove()}handleRowAction(t,e){t.dispatchEvent(new CustomEvent("rowaction",{detail:{action:e,row:t},bubbles:!0})),this.hideRowActions(t),t.style.transform=""}}class WatchlistSwipeGesture{constructor(t){this.item=t,this.startX=0,this.currentX=0,this.isDragging=!1,this.threshold=80,this.init()}init(){this.createSwipeActions(),this.bindEvents()}createSwipeActions(){if(this.item.querySelector(".swipe-actions"))return;const t=document.createElement("div");t.className="swipe-actions",t.innerHTML='\n            <button class="action-btn delete-btn touch-target" data-action="remove">\n                <i class="fas fa-trash"></i>\n            </button>\n            <button class="action-btn trade-btn touch-target" data-action="trade">\n                <i class="fas fa-chart-line"></i>\n            </button>\n        ',this.item.appendChild(t),t.addEventListener("click",t=>{const e=t.target.closest(".action-btn");if(e){const t=e.dataset.action;this.handleAction(t)}})}bindEvents(){this.item.addEventListener("touchstart",t=>this.handleTouchStart(t),{passive:!0}),this.item.addEventListener("touchmove",t=>this.handleTouchMove(t),{passive:!1}),this.item.addEventListener("touchend",t=>this.handleTouchEnd(t),{passive:!0})}handleTouchStart(t){this.startX=t.touches[0].clientX,this.isDragging=!1}handleTouchMove(t){if(!t.touches[0])return;this.currentX=t.touches[0].clientX;const e=this.currentX-this.startX;if(Math.abs(e)>10&&(this.isDragging=!0,t.preventDefault(),e<0)){const t=Math.min(Math.abs(e)/this.threshold,1);this.item.style.transform=`translateX(${e}px)`;const i=this.item.querySelector(".swipe-actions");i&&(i.style.opacity=t)}}handleTouchEnd(t){if(!this.isDragging)return;const e=this.currentX-this.startX,i=this.item.querySelector(".swipe-actions");e<-this.threshold?(this.item.style.transform=`translateX(-${this.threshold}px)`,i&&(i.classList.add("visible"),i.style.opacity="1")):this.hideActions(),this.isDragging=!1}hideActions(){this.item.style.transform="";const t=this.item.querySelector(".swipe-actions");t&&(t.classList.remove("visible"),t.style.opacity="0")}handleAction(t){const e=this.item.dataset.symbol||this.item.querySelector(".stock-symbol")?.textContent;switch(t){case"remove":this.removeFromWatchlist(e);break;case"trade":this.openTradeModal(e)}this.hideActions()}removeFromWatchlist(t){this.item.dispatchEvent(new CustomEvent("removestock",{detail:{symbol:t},bubbles:!0}))}openTradeModal(t){this.item.dispatchEvent(new CustomEvent("tradestock",{detail:{symbol:t},bubbles:!0}))}}document.addEventListener("DOMContentLoaded",()=>{new SwipeGestureManager}),window.SwipeGestureManager=SwipeGestureManager,window.ChartSwipeGesture=ChartSwipeGesture,window.TableSwipeGesture=TableSwipeGesture,window.WatchlistSwipeGesture=WatchlistSwipeGesture;