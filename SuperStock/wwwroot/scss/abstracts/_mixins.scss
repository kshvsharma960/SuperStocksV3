// ==========================================================================
// MIXINS - Reusable SCSS Mixins
// ==========================================================================

// Responsive Breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
    @if $value != 0 {
      @media (min-width: $value) {
        @content;
      }
    } @else {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// Flexbox Utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Button Styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $button-padding-y $button-padding-x;
  border: 1px solid transparent;
  border-radius: var(--radius-md);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  line-height: 1.5;
  text-decoration: none;
  cursor: pointer;
  transition: all var(--transition-fast);
  user-select: none;

  &:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color: #007bff, $text-color: #ffffff, $border-color: null) {
  @if $border-color == null {
    $border-color: $bg-color;
  }
  
  background-color: $bg-color;
  color: $text-color;
  border-color: $border-color;

  &:hover:not(:disabled) {
    background-color: darken($bg-color, 8%);
    border-color: darken($border-color, 8%);
  }

  &:active:not(:disabled) {
    background-color: darken($bg-color, 12%);
    border-color: darken($border-color, 12%);
    transform: translateY(1px);
  }
}

// Card Styles
@mixin card-base {
  background-color: var(--bg-card);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  transition: box-shadow var(--transition-fast);

  &:hover {
    box-shadow: var(--shadow-md);
  }
}

// Form Input Styles
@mixin input-base {
  width: 100%;
  height: $form-input-height;
  padding: var(--spacing-sm) var(--spacing-md);
  background-color: var(--bg-primary);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  font-size: var(--font-size-sm);
  color: var(--text-primary);
  transition: border-color var(--transition-fast), box-shadow var(--transition-fast);

  &::placeholder {
    color: var(--text-muted);
  }

  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.1);
  }

  &:disabled {
    background-color: var(--bg-secondary);
    cursor: not-allowed;
  }
}

// Animation Mixins
@mixin fade-in($duration: var(--duration-normal)) {
  animation: fadeIn $duration var(--ease-out);
}

@mixin slide-up($duration: var(--duration-normal)) {
  animation: slideUp $duration var(--ease-out);
}

@mixin pulse($duration: 2s) {
  animation: pulse $duration infinite;
}

// Loading Skeleton
@mixin skeleton {
  background: linear-gradient(90deg, var(--color-gray-200) 25%, var(--color-gray-100) 50%, var(--color-gray-200) 75%);
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s infinite;
}

// Scrollbar Styling
@mixin custom-scrollbar($width: 8px, $track-color: #f1f3f4, $thumb-color: #d1d5db) {
  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: 10px;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: 10px;

    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// Text Truncation
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-truncate-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Aspect Ratio
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-top: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Glass Effect
@mixin glass-effect($opacity: 0.1) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

// Focus Ring
@mixin focus-ring($color: var(--color-primary)) {
  &:focus {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

// Hover Lift Effect
@mixin hover-lift($scale: 1.02, $shadow: var(--shadow-lg)) {
  transition: transform var(--transition-fast), box-shadow var(--transition-fast);
  
  &:hover {
    transform: translateY(-2px) scale($scale);
    box-shadow: $shadow;
  }
}