// ==========================================================================
// FUNCTIONS - SCSS Functions
// ==========================================================================

// Convert pixels to rem
@function rem($pixels, $base: 16px) {
  @return ($pixels / $base) * 1rem;
}

// Convert pixels to em
@function em($pixels, $base: 16px) {
  @return ($pixels / $base) * 1em;
}

// Get color from map
@function color($color-name) {
  @if map-has-key($colors, $color-name) {
    @return map-get($colors, $color-name);
  } @else {
    @warn "Color '#{$color-name}' not found in color map.";
    @return null;
  }
}

// Get breakpoint value
@function breakpoint($breakpoint-name) {
  @if map-has-key($breakpoints, $breakpoint-name) {
    @return map-get($breakpoints, $breakpoint-name);
  } @else {
    @warn "Breakpoint '#{$breakpoint-name}' not found in breakpoints map.";
    @return null;
  }
}

// Calculate fluid typography
@function fluid-type($min-size, $max-size, $min-width: 320px, $max-width: 1200px) {
  $slope: ($max-size - $min-size) / ($max-width - $min-width);
  $intersection: (-$min-width * $slope) + $min-size;
  
  @return clamp(#{$min-size}, #{$intersection} + #{$slope * 100vw}, #{$max-size});
}

// Lighten color
@function lighten-color($color, $percentage) {
  @return mix(white, $color, $percentage);
}

// Darken color
@function darken-color($color, $percentage) {
  @return mix(black, $color, $percentage);
}

// Strip units from value
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}